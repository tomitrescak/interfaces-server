/* tslint:disable */


/**
 * AUTO-GENERATED FILE @ 2019-02-07 13:22:52 - DO NOT EDIT!
 *
 * This file was automatically generated by schemats v.3.0.3
 * $ schemats generate -c mysql://username:password@localhost/confiscations -t confiscation -t confiscation_decision -t confiscation_reason -t consignment -t edition -t person -t super_book -t unit -s confiscations
 *
 */

export type enum_acquit_a_caution = 'yes' | 'no' | 'not specified' | 'not known';

export namespace confiscationFields {
    export type ID = number;
    export type UUID = string | null;
    export type consignment = number;
    export type title = string | null;
    export type book_number = string | null;
    export type number_ = number | null;
    export type unit = number | null;
    export type confiscation_reason = number | null;
    export type confiscation_decision = number | null;
    export type date = Date | null;
    export type censor_name = string | null;
    export type censor = string | null;
    export type sent_to_person_name = string | null;
    export type sent_to_person = string | null;
    export type sent_to_place_name = string | null;
    export type sent_to_place = string | null;

}

export interface confiscation {
    ID: confiscationFields.ID;
    UUID: confiscationFields.UUID;
    consignment: confiscationFields.consignment;
    title: confiscationFields.title;
    book_number: confiscationFields.book_number;
    number: confiscationFields.number_;
    unit: confiscationFields.unit;
    confiscation_reason: confiscationFields.confiscation_reason;
    confiscation_decision: confiscationFields.confiscation_decision;
    date: confiscationFields.date;
    censor_name: confiscationFields.censor_name;
    censor: confiscationFields.censor;
    sent_to_person_name: confiscationFields.sent_to_person_name;
    sent_to_person: confiscationFields.sent_to_person;
    sent_to_place_name: confiscationFields.sent_to_place_name;
    sent_to_place: confiscationFields.sent_to_place;

}

export namespace confiscation_decisionFields {
    export type ID = number;
    export type name = string | null;
    export type definition = string | null;

}

export interface confiscation_decision {
    ID: confiscation_decisionFields.ID;
    name: confiscation_decisionFields.name;
    definition: confiscation_decisionFields.definition;

}

export namespace confiscation_reasonFields {
    export type ID = number;
    export type name = string | null;
    export type definition = string | null;

}

export interface confiscation_reason {
    ID: confiscation_reasonFields.ID;
    name: confiscation_reasonFields.name;
    definition: confiscation_reasonFields.definition;

}

export namespace consignmentFields {
    export type ID = number;
    export type UUID = string | null;
    export type confiscation_register_ms = number | null;
    export type confiscation_register_folio = string | null;
    export type customs_register_ms = number | null;
    export type customs_register_folio = string | null;
    export type ms_21935_folio = string | null;
    export type shipping_number = string | null;
    export type marque = string | null;
    export type inspection_date = Date | null;
    export type addressee_name = string | null;
    export type addressee_title = string | null;
    export type addressee = string | null;
    export type origin_text = string | null;
    export type origin_code = string | null;
    export type residual_collector_name = string | null;
    export type residual_collector = string | null;
    export type collector_signed = Buffer | null;
    export type acquit_a_caution = enum_acquit_a_caution | null;
    export type confiscation_register_notes = string | null;
    export type customs_register_notes = string | null;

}

export interface consignment {
    ID: consignmentFields.ID;
    UUID: consignmentFields.UUID;
    confiscation_register_ms: consignmentFields.confiscation_register_ms;
    confiscation_register_folio: consignmentFields.confiscation_register_folio;
    customs_register_ms: consignmentFields.customs_register_ms;
    customs_register_folio: consignmentFields.customs_register_folio;
    ms_21935_folio: consignmentFields.ms_21935_folio;
    shipping_number: consignmentFields.shipping_number;
    marque: consignmentFields.marque;
    inspection_date: consignmentFields.inspection_date;
    addressee_name: consignmentFields.addressee_name;
    addressee_title: consignmentFields.addressee_title;
    addressee: consignmentFields.addressee;
    origin_text: consignmentFields.origin_text;
    origin_code: consignmentFields.origin_code;
    residual_collector_name: consignmentFields.residual_collector_name;
    residual_collector: consignmentFields.residual_collector;
    collector_signed: consignmentFields.collector_signed;
    acquit_a_caution: consignmentFields.acquit_a_caution;
    confiscation_register_notes: consignmentFields.confiscation_register_notes;
    customs_register_notes: consignmentFields.customs_register_notes;

}

export namespace editionFields {
    export type book_code = string;
    export type super_book_code = string;
    export type edition_status = string;
    export type edition_type = string;
    export type full_book_title = string | null;
    export type short_book_titles = string | null;
    export type translated_title = string | null;
    export type translated_language = string | null;
    export type languages = string | null;
    export type stated_publishers = string | null;
    export type actual_publishers = string | null;
    export type stated_publication_places = string | null;
    export type actual_publication_places = string | null;
    export type stated_publication_years = string | null;
    export type actual_publication_years = string | null;
    export type pages = string | null;
    export type quick_pages = string | null;
    export type number_of_volumes = number | null;
    export type section = string | null;
    export type edition = string | null;
    export type book_sheets = string | null;
    export type notes = string | null;
    export type research_notes = string | null;

}

export interface edition {
    book_code: editionFields.book_code;
    super_book_code: editionFields.super_book_code;
    edition_status: editionFields.edition_status;
    edition_type: editionFields.edition_type;
    full_book_title: editionFields.full_book_title;
    short_book_titles: editionFields.short_book_titles;
    translated_title: editionFields.translated_title;
    translated_language: editionFields.translated_language;
    languages: editionFields.languages;
    stated_publishers: editionFields.stated_publishers;
    actual_publishers: editionFields.actual_publishers;
    stated_publication_places: editionFields.stated_publication_places;
    actual_publication_places: editionFields.actual_publication_places;
    stated_publication_years: editionFields.stated_publication_years;
    actual_publication_years: editionFields.actual_publication_years;
    pages: editionFields.pages;
    quick_pages: editionFields.quick_pages;
    number_of_volumes: editionFields.number_of_volumes;
    section: editionFields.section;
    edition: editionFields.edition;
    book_sheets: editionFields.book_sheets;
    notes: editionFields.notes;
    research_notes: editionFields.research_notes;

}

export namespace personFields {
    export type person_code = string;
    export type person_name = string | null;
    export type sex = string | null;
    export type title = string | null;
    export type other_names = string | null;
    export type designation = string | null;
    export type status = string | null;
    export type birth_date = string | null;
    export type death_date = string | null;
    export type notes = string | null;

}

export interface person {
    person_code: personFields.person_code;
    person_name: personFields.person_name;
    sex: personFields.sex;
    title: personFields.title;
    other_names: personFields.other_names;
    designation: personFields.designation;
    status: personFields.status;
    birth_date: personFields.birth_date;
    death_date: personFields.death_date;
    notes: personFields.notes;

}

export namespace super_bookFields {
    export type super_book_code = string;
    export type super_book_title = string;
    export type keywords = string | null;
    export type parisian_keyword = string | null;
    export type illegality = string | null;

}

export interface super_book {
    super_book_code: super_bookFields.super_book_code;
    super_book_title: super_bookFields.super_book_title;
    keywords: super_bookFields.keywords;
    parisian_keyword: super_bookFields.parisian_keyword;
    illegality: super_bookFields.illegality;

}

export namespace unitFields {
    export type ID = number;
    export type name = string | null;
    export type definition = string | null;

}

export interface unit {
    ID: unitFields.ID;
    name: unitFields.name;
    definition: unitFields.definition;

}
