#import * from "./types.graphql"

scalar JSON

type DropdownOption {
  key: ID
  value: String
  text: String
  description: String
}

type SearchOption {
  key: ID
  value: String
  title: String
  titles: [String!]
  description: String
}

type Data {
  id: String
  table: String
  key: String
  data: JSON
}

type Config {
  config: String
  users: [User]
}

type Query {
  search(searchString: String!, name: String, id: String): [SearchOption!]!
  enumerator(name: String): [DropdownOption!]!
  config: Config

  find(searchString: String!, name: String!, limit: Int): JSON
  findOne(id: String!, table: String!): Data
  resume(token: String!): AuthPayload
}

type User {
  id: ID!
  user: String!
  email: String!
  password: String
  roles: [String]
}

input UserInput {
  id: ID!
  user: String!
  email: String!
  roles: [String]
}

type AuthPayload {
  token: String
  user: User
}

type Mutation {
  save(table: String, data: JSON): Data
  saveConfig(config: String, users: [UserInput]): Boolean

  signup(email: String!, password: String!, name: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
}
